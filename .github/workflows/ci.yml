# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  - workflow_dispatch
  - pull_request
  - push

name: CI

permissions: {}

jobs:
  licenses:
    
    name: License update
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      # Get GitHub token via the CT SDKs App
      - name: Generate GitHub token (via CT SDKs App)
        id: generate_github_token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2
        with:
          app-id: ${{ secrets.CT_SDKS_APP_ID }}
          private-key: ${{ secrets.CT_SDKS_APP_PEM }}

      - name: Get App user
        id: get_app_user
        env:
          GITHUB_TOKEN: ${{ steps.generate_github_token.outputs.token }}
        run: |
          export GH_APP_USER=`gh api /users/ct-sdks%5Bbot%5D | jq .id`
          echo "email=${GH_APP_USER}+ct-sdks[bot]@users.noreply.github.com" >> "$GITHUB_OUTPUT"

      - name: Support longpaths
        run: git config --global core.longpaths true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          # Pass a personal access token (using our CT SDKs App) to be able to trigger other workflows
          # https://help.github.com/en/actions/reference/events-that-trigger-workflows#triggering-new-workflows-using-a-personal-access-token
          # https://github.community/t/action-does-not-trigger-another-on-push-tag-action/17148/8
          token: ${{ steps.generate_github_token.outputs.token }}

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            9.0.x
      - run: dotnet tool restore
        working-directory: ./commercetools.Sdk
      - run: dotnet restore --configfile Nuget.config --packages ../packages
        working-directory: ./commercetools.Sdk
      - run: dotnet build --no-restore --source ../packages -c Release
        working-directory: ./commercetools.Sdk
      - run:  dotnet tool install --global dotnet-project-licenses
      - run: ./license-check.sh

      - uses: stefanzweifel/git-auto-commit-action@b863ae1933cb653a53c021fe36dbb774e1fb9403 # v5.2.0
        id: commit_license_change
        if: github.event_name == 'push' && github.ref != 'refs/heads/master'
        with:
          push_options: --dry-run
          file_pattern: 'licenses/index.json'
          commit_message: "TASK: Updating license information"
          commit_author: ct-sdks[bot] <${{ steps.get_app_user.outputs.email }}>
          commit_user_name: ct-sdks[bot]
          commit_user_email: ${{ steps.get_app_user.outputs.email }}
          disable_globbing: true
      - name: Push if changes
        if: steps.commit_license_change.outputs.changes_detected
        run: git push origin

        
  unittests:
    name: Unit tests

    continue-on-error: true
    strategy:
      matrix:
        osversion:
          - windows-latest
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.osversion }}

    steps:
      - name: Support longpaths
        run: git config --global core.longpaths true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: 'false'
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            9.0.x
      - run: dotnet tool restore
        working-directory: ./commercetools.Sdk
      - run: dotnet restore --configfile Nuget.config --packages ../packages
        working-directory: ./commercetools.Sdk
      - run: dotnet build --no-restore --source ../packages -c Release
        working-directory: ./commercetools.Sdk
      - run: dotnet test --verbosity=normal Tests/commercetools.Api.Serialization.Tests --no-build -c Release
        working-directory: ./commercetools.Sdk
      - run: dotnet test --verbosity=normal Tests/commercetools.Sdk.Api.Tests --no-build -c Release
        working-directory: ./commercetools.Sdk
      - run: dotnet test --verbosity=normal Tests/commercetools.Sdk.ImportApi.Tests --no-build -c Release
        working-directory: ./commercetools.Sdk        
      - run: dotnet test --verbosity=normal Tests/commercetools.Sdk.HistoryApi.Tests --no-build -c Release
        working-directory: ./commercetools.Sdk
        
  integrationtests:
    name: Integration tests

    runs-on: ubuntu-latest

    strategy:
      max-parallel: 1
      matrix:
        ClientType:
          - Stream
          - String
    env:
      CTP_ClientType: ${{ matrix.ClientType }}
      CTP_Client__ClientId: ${{ secrets.CTP_CLIENT_ID }}
      CTP_Client__ClientSecret: ${{ secrets.CTP_CLIENT_SECRET }}
      CTP_Client__ProjectKey: ${{ secrets.CTP_PROJECT_KEY }}
      CTP_Client__Scope: ${{ secrets.CTP_SCOPE }}
      CTP_Import__ClientId: ${{ secrets.CTP_CLIENT_ID }}
      CTP_Import__ClientSecret: ${{ secrets.CTP_CLIENT_SECRET }}
      CTP_Import__ProjectKey: ${{ secrets.CTP_PROJECT_KEY }}
      CTP_Import__Scope: ${{ secrets.CTP_SCOPE }}
      CTP_Import__ApiBaseAddress: "https://import.europe-west1.gcp.commercetools.com/"
      CTP_MeClient__ClientId: ${{ secrets.CTP_MECLIENT_ID }}
      CTP_MeClient__ClientSecret: ${{ secrets.CTP_MECLIENT_SECRET }}
      CTP_MeClient__ProjectKey: ${{ secrets.CTP_MEPROJECT_KEY }}
      CTP_MeClient__Scope: ${{ secrets.CTP_MESCOPES }}
    steps:
      # Get GitHub token via the CT SDKs App
      - name: Generate GitHub token (via CT SDKs App)
        id: generate_github_token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2
        with:
          app-id: ${{ secrets.CT_SDKS_APP_ID }}
          private-key: ${{ secrets.CT_SDKS_APP_PEM }}

      - name: Get App user
        id: get_app_user
        env:
          GITHUB_TOKEN: ${{ steps.generate_github_token.outputs.token }}
        run: |
          export GH_APP_USER=`gh api /users/ct-sdks%5Bbot%5D | jq .id`
          echo "email=${GH_APP_USER}+ct-sdks[bot]@users.noreply.github.com" >> "$GITHUB_OUTPUT"

      - name: Support longpaths
        run: git config --global core.longpaths true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          # Pass a personal access token (using our CT SDKs App) to be able to trigger other workflows
          # https://help.github.com/en/actions/reference/events-that-trigger-workflows#triggering-new-workflows-using-a-personal-access-token
          # https://github.community/t/action-does-not-trigger-another-on-push-tag-action/17148/8
          token: ${{ steps.generate_github_token.outputs.token }}

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            9.0.x
      - run: dotnet tool restore
        working-directory: ./commercetools.Sdk
      - run: dotnet restore --configfile Nuget.config --packages ../packages
        working-directory: ./commercetools.Sdk
      - run: dotnet build --no-restore --source ../packages -c Release
        working-directory: ./commercetools.Sdk
      - run: dotnet test IntegrationTests/commercetools.Api.IntegrationTests --verbosity=normal --no-build -c Release
        if: github.event_name == 'push'
        working-directory: ./commercetools.Sdk
      - run: dotnet test IntegrationTests/commercetools.Api.IntegrationTests --verbosity=normal --no-build -c Release
        if: github.event_name == 'pull_request'
        working-directory: ./commercetools.Sdk
        env:
          CTP_Client__ClientId: ${{ secrets.CTP_CLIENT_ID_PR }}
          CTP_Client__ClientSecret: ${{ secrets.CTP_CLIENT_SECRET_PR }}
          CTP_Client__ProjectKey: ${{ secrets.CTP_PROJECT_KEY_PR }}
          CTP_Client__Scope: ${{ secrets.CTP_SCOPE_PR }}
          CTP_Import__ClientId: ${{ secrets.CTP_CLIENT_ID_PR }}
          CTP_Import__ClientSecret: ${{ secrets.CTP_CLIENT_SECRET_PR }}
          CTP_Import__ProjectKey: ${{ secrets.CTP_PROJECT_KEY_PR }}
          CTP_Import__Scope: ${{ secrets.CTP_SCOPE_PR }}
          CTP_Import__ApiBaseAddress: "https://import.europe-west1.gcp.commercetools.com/"
          CTP_MeClient__ClientId: ${{ secrets.CTP_MECLIENT_ID_PR }}
          CTP_MeClient__ClientSecret: ${{ secrets.CTP_MECLIENT_SECRET_PR }}
          CTP_MeClient__ProjectKey: ${{ secrets.CTP_MEPROJECT_KEY_PR }}
          CTP_MeClient__Scope: ${{ secrets.CTP_MESCOPES_PR }}
      - run: dotnet test IntegrationTests/commercetools.ImportApi.IntegrationTests --verbosity=normal --no-build -c Release
        if: github.event_name == 'push'
        working-directory: ./commercetools.Sdk
      - run: dotnet test IntegrationTests/commercetools.ImportApi.IntegrationTests --verbosity=normal --no-build -c Release
        if: github.event_name == 'pull_request'
        working-directory: ./commercetools.Sdk
        env:
          CTP_Client__ClientId: ${{ secrets.CTP_CLIENT_ID_PR }}
          CTP_Client__ClientSecret: ${{ secrets.CTP_CLIENT_SECRET_PR }}
          CTP_Client__ProjectKey: ${{ secrets.CTP_PROJECT_KEY_PR }}
          CTP_Client__Scope: ${{ secrets.CTP_SCOPE_PR }}
          CTP_MeClient__ClientId: ${{ secrets.CTP_MECLIENT_ID_PR }}
          CTP_MeClient__ClientSecret: ${{ secrets.CTP_MECLIENT_SECRET_PR }}
          CTP_MeClient__ProjectKey: ${{ secrets.CTP_MEPROJECT_KEY_PR }}
          CTP_MeClient__Scope: ${{ secrets.CTP_MESCOPES_PR }}
      - run: dotnet test IntegrationTests/commercetools.GraphQL.Api.IntegrationTests --verbosity=normal --no-build -c Release
        if: github.event_name == 'push'
        working-directory: ./commercetools.Sdk
      - run: dotnet test IntegrationTests/commercetools.GraphQL.Api.IntegrationTests --verbosity=normal --no-build -c Release
        if: github.event_name == 'pull_request'
        working-directory: ./commercetools.Sdk
        env:
          CTP_Client__ClientId: ${{ secrets.CTP_CLIENT_ID_PR }}
          CTP_Client__ClientSecret: ${{ secrets.CTP_CLIENT_SECRET_PR }}
          CTP_Client__ProjectKey: ${{ secrets.CTP_PROJECT_KEY_PR }}
          CTP_Client__Scope: ${{ secrets.CTP_SCOPE_PR }}
          CTP_Import__ClientId: ${{ secrets.CTP_CLIENT_ID_PR }}
          CTP_Import__ClientSecret: ${{ secrets.CTP_CLIENT_SECRET_PR }}
          CTP_Import__ProjectKey: ${{ secrets.CTP_PROJECT_KEY_PR }}
          CTP_Import__Scope: ${{ secrets.CTP_SCOPE_PR }}
          CTP_Import__ApiBaseAddress: "https://import.europe-west1.gcp.commercetools.com/"
          CTP_MeClient__ClientId: ${{ secrets.CTP_MECLIENT_ID_PR }}
          CTP_MeClient__ClientSecret: ${{ secrets.CTP_MECLIENT_SECRET_PR }}
          CTP_MeClient__ProjectKey: ${{ secrets.CTP_MEPROJECT_KEY_PR }}
          CTP_MeClient__Scope: ${{ secrets.CTP_MESCOPES_PR }}

  artifacts:
    name: Create artifacts
    runs-on: ubuntu-latest
    needs: [unittests, integrationtests]
    steps:
      # Get GitHub token via the CT SDKs App
      - name: Generate GitHub token (via CT SDKs App)
        id: generate_github_token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2
        with:
          app-id: ${{ secrets.CT_SDKS_APP_ID }}
          private-key: ${{ secrets.CT_SDKS_APP_PEM }}

      - name: Get App user
        id: get_app_user
        env:
          GITHUB_TOKEN: ${{ steps.generate_github_token.outputs.token }}
        run: |
          export GH_APP_USER=`gh api /users/ct-sdks%5Bbot%5D | jq .id`
          echo "email=${GH_APP_USER}+ct-sdks[bot]@users.noreply.github.com" >> "$GITHUB_OUTPUT"

      - name: Support longpaths
        run: git config --global core.longpaths true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          # Pass a personal access token (using our CT SDKs App) to be able to trigger other workflows
          # https://help.github.com/en/actions/reference/events-that-trigger-workflows#triggering-new-workflows-using-a-personal-access-token
          # https://github.community/t/action-does-not-trigger-another-on-push-tag-action/17148/8
          token: ${{ steps.generate_github_token.outputs.token }}

      # Authenticates packages to push to GPR
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            9.0.x
          source-url: https://nuget.pkg.github.com/commercetools/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./patch_csproj.rb --version 0.1.0-alpha-${{ github.run_number }} --patch **/*.csproj
      - run: dotnet tool restore
        working-directory: ./commercetools.Sdk
      - run: dotnet restore --configfile Nuget.config --packages ../packages
        working-directory: ./commercetools.Sdk
      - run: dotnet build --no-restore --source ../packages -c Release
        working-directory: ./commercetools.Sdk
      - name: Create the package
        run: dotnet pack -c Release  -o ../pack/ --configfile Nuget.config
        working-directory: ./commercetools.Sdk
      - name: List packages
        run: ls -la pack
      - uses: actions/upload-artifact@v4
        with:
          name: commercetools.Sdkv2.0.1.0-alpha-${{ github.run_number }}
          path: pack

