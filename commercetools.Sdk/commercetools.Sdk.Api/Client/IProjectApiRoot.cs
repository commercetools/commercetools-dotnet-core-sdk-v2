using commercetools.Base.Client;
using commercetools.Sdk.Api.Client.RequestBuilders.ApiClients;
using commercetools.Sdk.Api.Client.RequestBuilders.AsAssociate;
using commercetools.Sdk.Api.Client.RequestBuilders.AssociateRoles;
using commercetools.Sdk.Api.Client.RequestBuilders.AttributeGroups;
using commercetools.Sdk.Api.Client.RequestBuilders.BusinessUnits;
using commercetools.Sdk.Api.Client.RequestBuilders.CartDiscounts;
using commercetools.Sdk.Api.Client.RequestBuilders.Carts;
using commercetools.Sdk.Api.Client.RequestBuilders.Categories;
using commercetools.Sdk.Api.Client.RequestBuilders.Channels;
using commercetools.Sdk.Api.Client.RequestBuilders.CustomerGroups;
using commercetools.Sdk.Api.Client.RequestBuilders.Customers;
using commercetools.Sdk.Api.Client.RequestBuilders.CustomObjects;
using commercetools.Sdk.Api.Client.RequestBuilders.DiscountCodes;
using commercetools.Sdk.Api.Client.RequestBuilders.DiscountGroups;
using commercetools.Sdk.Api.Client.RequestBuilders.Extensions;
using commercetools.Sdk.Api.Client.RequestBuilders.Graphql;
using commercetools.Sdk.Api.Client.RequestBuilders.InBusiness;
using commercetools.Sdk.Api.Client.RequestBuilders.InStore;
using commercetools.Sdk.Api.Client.RequestBuilders.Inventory;
using commercetools.Sdk.Api.Client.RequestBuilders.Login;
using commercetools.Sdk.Api.Client.RequestBuilders.Me;
using commercetools.Sdk.Api.Client.RequestBuilders.Messages;
using commercetools.Sdk.Api.Client.RequestBuilders.Orders;
using commercetools.Sdk.Api.Client.RequestBuilders.PaymentMethods;
using commercetools.Sdk.Api.Client.RequestBuilders.Payments;
using commercetools.Sdk.Api.Client.RequestBuilders.ProductDiscounts;
using commercetools.Sdk.Api.Client.RequestBuilders.ProductProjections;
using commercetools.Sdk.Api.Client.RequestBuilders.Products;
using commercetools.Sdk.Api.Client.RequestBuilders.ProductSelections;
using commercetools.Sdk.Api.Client.RequestBuilders.ProductTailoring;
using commercetools.Sdk.Api.Client.RequestBuilders.ProductTypes;
using commercetools.Sdk.Api.Client.RequestBuilders.Projects;
using commercetools.Sdk.Api.Client.RequestBuilders.QuoteRequests;
using commercetools.Sdk.Api.Client.RequestBuilders.Quotes;
using commercetools.Sdk.Api.Client.RequestBuilders.Reviews;
using commercetools.Sdk.Api.Client.RequestBuilders.ShippingMethods;
using commercetools.Sdk.Api.Client.RequestBuilders.ShoppingLists;
using commercetools.Sdk.Api.Client.RequestBuilders.StagedQuotes;
using commercetools.Sdk.Api.Client.RequestBuilders.StandalonePrices;
using commercetools.Sdk.Api.Client.RequestBuilders.States;
using commercetools.Sdk.Api.Client.RequestBuilders.Stores;
using commercetools.Sdk.Api.Client.RequestBuilders.Subscriptions;
using commercetools.Sdk.Api.Client.RequestBuilders.TaxCategories;
using commercetools.Sdk.Api.Client.RequestBuilders.Types;
using commercetools.Sdk.Api.Client.RequestBuilders.Zones;
using commercetools.Sdk.Api.Models.Projects;

namespace commercetools.Sdk.Api.Client;

public interface IProjectApiRoot
{
    string ClientName { get; }
    string ProjectKey { get; }
    IClient ApiHttpClient { get; }
    ByProjectKeyRequestBuilder With();
    ByProjectKeyGet Get();
    ByProjectKeyPost Post(ProjectUpdate projectUpdate);
    ByProjectKeyHead Head();
    ByProjectKeyCategoriesRequestBuilder Categories();
    ByProjectKeyCartsRequestBuilder Carts();
    ByProjectKeyCartDiscountsRequestBuilder CartDiscounts();
    ByProjectKeyChannelsRequestBuilder Channels();
    ByProjectKeyCustomersRequestBuilder Customers();
    ByProjectKeyCustomerGroupsRequestBuilder CustomerGroups();
    ByProjectKeyCustomObjectsRequestBuilder CustomObjects();
    ByProjectKeyDiscountCodesRequestBuilder DiscountCodes();
    ByProjectKeyGraphqlRequestBuilder Graphql();
    ByProjectKeyInventoryRequestBuilder Inventory();
    ByProjectKeyLoginRequestBuilder Login();
    ByProjectKeyMessagesRequestBuilder Messages();
    ByProjectKeyOrdersRequestBuilder Orders();
    ByProjectKeyPaymentsRequestBuilder Payments();
    ByProjectKeyProductsRequestBuilder Products();
    ByProjectKeyProductDiscountsRequestBuilder ProductDiscounts();
    ByProjectKeyProductProjectionsRequestBuilder ProductProjections();
    ByProjectKeyProductSelectionsRequestBuilder ProductSelections();
    ByProjectKeyProductTypesRequestBuilder ProductTypes();
    ByProjectKeyQuotesRequestBuilder Quotes();
    ByProjectKeyQuoteRequestsRequestBuilder QuoteRequests();
    ByProjectKeyReviewsRequestBuilder Reviews();
    ByProjectKeyShippingMethodsRequestBuilder ShippingMethods();
    ByProjectKeyShoppingListsRequestBuilder ShoppingLists();
    ByProjectKeyStagedQuotesRequestBuilder StagedQuotesRequests();
    ByProjectKeyStatesRequestBuilder States();
    ByProjectKeySubscriptionsRequestBuilder Subscriptions();
    ByProjectKeyTaxCategoriesRequestBuilder TaxCategories();
    ByProjectKeyTypesRequestBuilder Types();
    ByProjectKeyZonesRequestBuilder Zones();
    ByProjectKeyMeRequestBuilder Me();
    ByProjectKeyExtensionsRequestBuilder Extensions();
    ByProjectKeyApiClientsRequestBuilder ApiClients();
    ByProjectKeyStoresRequestBuilder Stores();
    ByProjectKeyBusinessUnitsRequestBuilder BusinessUnits();
    ByProjectKeyStagedQuotesRequestBuilder StagedQuotes();
    ByProjectKeyAttributeGroupsRequestBuilder AttributeGroups();
    ByProjectKeyInStoreKeyByStoreKeyRequestBuilder InStore(string storeKey);
    ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyRequestBuilder InBusinessUnit(string businessUnitKey);
    ByProjectKeyStandalonePricesRequestBuilder StandalonePrices();
    ByProjectKeyAsAssociateRequestBuilder AsAssociate();
    ByProjectKeyAssociateRolesRequestBuilder AssociateRoles();
    ByProjectKeyProductTailoringRequestBuilder ProductTailoring();
    ByProjectKeyDiscountGroupsRequestBuilder DiscountGroups();
    ByProjectKeyPaymentMethodsRequestBuilder PaymentMethods();
}